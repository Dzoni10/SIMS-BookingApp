<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Accommodation" xml:space="preserve">
    <value>Accommodation</value>
  </data>
  <data name="Accommodation:" xml:space="preserve">
    <value>Accommodation:</value>
  </data>
  <data name="Accommodations" xml:space="preserve">
    <value>Accommodations</value>
  </data>
  <data name="Accommodation_rate" xml:space="preserve">
    <value>Accommodation rate</value>
  </data>
  <data name="Add_Accommodation" xml:space="preserve">
    <value>Add Accommodation</value>
  </data>
  <data name="Add_renovation" xml:space="preserve">
    <value>Add renovation</value>
  </data>
  <data name="Advices" xml:space="preserve">
    <value>Advices</value>
  </data>
  <data name="Advicess" xml:space="preserve">
    <value>Advices</value>
  </data>
  <data name="Attend" xml:space="preserve">
    <value>**(You need to rate all guests to be available for this review)**</value>
  </data>
  <data name="AttentionRate" xml:space="preserve">
    <value>Attention: You have unrated guests (rating period: 5 days after moving)</value>
  </data>
  <data name="Average_rate:" xml:space="preserve">
    <value>Average rate:</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="Cancel_renovation" xml:space="preserve">
    <value>Cancel renovation</value>
  </data>
  <data name="Capacity" xml:space="preserve">
    <value>Capacity</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Cleanliness:" xml:space="preserve">
    <value>Cleanliness:</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Comment:" xml:space="preserve">
    <value>Comment:</value>
  </data>
  <data name="Commentr:" xml:space="preserve">
    <value>Additional comment:</value>
  </data>
  <data name="Comnent" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Create_Report" xml:space="preserve">
    <value>Create report</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Deny" xml:space="preserve">
    <value>Deny</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EndDate:" xml:space="preserve">
    <value>End date:</value>
  </data>
  <data name="End_date" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Explanation:" xml:space="preserve">
    <value>Explanation:</value>
  </data>
  <data name="Following_rules:" xml:space="preserve">
    <value>Following rules:</value>
  </data>
  <data name="Home_page" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="lab" xml:space="preserve">
    <value>Attratcive location(s) where need a new accommodation</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Location(City)" xml:space="preserve">
    <value>Location(City)</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Minimal_Days" xml:space="preserve">
    <value>Minimal days</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Month_statistics" xml:space="preserve">
    <value>Month statistics</value>
  </data>
  <data name="Month_stats" xml:space="preserve">
    <value>Month stats</value>
  </data>
  <data name="Most_busy_in:" xml:space="preserve">
    <value>Most busy in: </value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name:" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Notice_Period" xml:space="preserve">
    <value>Notice period</value>
  </data>
  <data name="openForum" xml:space="preserve">
    <value>One forum opened</value>
  </data>
  <data name="Owner_Profile" xml:space="preserve">
    <value>Owner profile</value>
  </data>
  <data name="Owner_rate" xml:space="preserve">
    <value>Owner rate</value>
  </data>
  <data name="Picture_URLs" xml:space="preserve">
    <value>Picture URLs</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="Rate_Guests" xml:space="preserve">
    <value>Rate Guests</value>
  </data>
  <data name="Rating_guest" xml:space="preserve">
    <value>Rating guest</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Renovate" xml:space="preserve">
    <value>Renovate</value>
  </data>
  <data name="Renovating" xml:space="preserve">
    <value>Renovating</value>
  </data>
  <data name="Renovation" xml:space="preserve">
    <value>Renovation</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Reported" xml:space="preserve">
    <value>Reported</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>Requests</value>
  </data>
  <data name="Rescheduled" xml:space="preserve">
    <value>Rescheduled</value>
  </data>
  <data name="Reservation_reschedule" xml:space="preserve">
    <value>Reservation reschedule</value>
  </data>
  <data name="Reserved" xml:space="preserve">
    <value>Reserved</value>
  </data>
  <data name="ResheduleWarning" xml:space="preserve">
    <value>Warning: This request overlaps with other reservation</value>
  </data>
  <data name="Review" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="Role:" xml:space="preserve">
    <value>Role:</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Serbian" xml:space="preserve">
    <value>Serbian</value>
  </data>
  <data name="StartDate:" xml:space="preserve">
    <value>Start date:</value>
  </data>
  <data name="Start_date" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Registration successfull</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="unlab" xml:space="preserve">
    <value>Unattratcive location(s) where need close accommodation</value>
  </data>
  <data name="unratedGuests" xml:space="preserve">
    <value>You have unrated guests</value>
  </data>
  <data name="View_stats" xml:space="preserve">
    <value>View stats</value>
  </data>
  <data name="Welcome_to" xml:space="preserve">
    <value>Welcome to</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="yearly" xml:space="preserve">
    <value>year</value>
  </data>
</root>