<Page x:Class="BookingApp.WPF.View.GuestAccommodations"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BookingApp.WPF.View"
      xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
      xmlns:val="clr-namespace:BookingApp.Utilities.Validation"
      xmlns:local1="clr-namespace:BookingApp.Utilities.Converters"
      mc:Ignorable="d" 
      Title="GuestAccommodations"
      Height="670" Width="1024"
      ShowsNavigationUI="False">


    <Grid Background="#eff2f7" Height="auto" >

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid> 
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Width" Value="100"/>
                    <Setter Property="Margin" Value="30 0 0 0" />
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Width" Value="100" />
                    <Setter Property="Height" Value="25" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Width" Value="100" />
                    <Setter Property="Height" Value="25" />
                </Style>
                <Style x:Key="LocalButtonStyle" TargetType="Button">
                    <Setter Property="Width" Value="80" />
                    <Setter Property="Height" Value="30" />
                </Style>
                
            </Grid.Resources>
            <TextBlock Text="Name:" Grid.Column="0" Grid.Row="0"  VerticalAlignment="Center"/>
            <TextBlock Text="State:" Grid.Column="2" Grid.Row="0" VerticalAlignment="Center"/>
            <TextBlock Text="City:" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center"/>
            <TextBlock Text="Type:" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center"/>
            <TextBlock Text="Guest number:" Grid.Column="4" Grid.Row="0" VerticalAlignment="Center"/>
            <TextBlock Text="Duration:" Grid.Column="4" Grid.Row="1" VerticalAlignment="Center"/>

            <TextBox x:Name="NameTextBox" Grid.Column="1" Grid.Row="0" />
            <ComboBox x:Name="LocationStateComboBox" Grid.Column="3" Grid.Row="0" 
                  ItemsSource="{Binding States}" SelectedItem="{Binding SelectedState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            
            <ComboBox x:Name="LocationCityComboBox" Grid.Column="3" Grid.Row="1" 
                  ItemsSource="{Binding Cities, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <ComboBox x:Name="AccommodationTypeComboBox" Grid.Column="1" Grid.Row="1"
                  ItemsSource="{Binding Types}" SelectedItem="{Binding SelectedType,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


            <TextBox x:Name="DurationTextBox" Grid.Column="5" Grid.Row="1" Margin="0,0,0,0">
                <TextBox.Text>
                    <Binding Path="DaysReserved" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:StringValidationRule ValidationStep="RawProposedValue"/>
                            <val:IntValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <TextBox x:Name="NumberOfGuestsTextBox" Grid.Column="5" Grid.Row="0" Margin="0,0,0,0">
                <TextBox.Text>
                    <Binding Path="NumberOfGuests" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:StringValidationRule ValidationStep="RawProposedValue"/>
                            <val:IntValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <Button x:Name="SearchButton" Grid.Column="7" Grid.Row="0" Content="Search" Command="{Binding SearchCommand}"
                Padding="2"  FontSize="15" Width="80" Height="30" Margin="20 0 0 0">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Setter Property="Background" Value="#6741d9" />
                        <Setter Property="Foreground" Value="#ffffff" />
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=NumberOfGuestsTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=DurationTextBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="ResetButton" Grid.Column="7" Grid.Row="1" Content="Reset" Command="{Binding ResetCommand}"
                Padding="2" FontSize="15" Style="{StaticResource ResourceKey=StyledButton}" Width="80" Height="30" Margin="20 0 0 0"/>
        </Grid>
        
        <DataGrid Grid.Row="1"
                          Height="550"  
                          Width="auto"
                          Style="{StaticResource ResourceKey=DGStyle}"
                          ColumnHeaderStyle="{StaticResource ResourceKey=DGColumnHeaderStyle}"
                          RowStyle="{StaticResource ResourceKey=DGRow}"
                          CellStyle="{StaticResource ResourceKey=DGCell}"
                          ScrollViewer.CanContentScroll="False"
                          AutoGenerateColumns="False" 
                          HorizontalScrollBarVisibility="Hidden"
                          x:Name="AccommodationsDataGrid" 
                          Margin="10 40 10 0" 
                          IsReadOnly="True"
                          ItemsSource="{Binding Accommodations, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedAccommodation, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Image" Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Image.Path}" Width="150" Height="150"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Name" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Type" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Type}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Capacity" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Capacity}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Minimal Reservation" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding MinStayDays}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Cancelation Period" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding CancelationPeriod}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="City" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding  Location.City}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
               

                <DataGridTemplateColumn Header="Action" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel VerticalAlignment="Center">
                                <Button Command="{Binding DataContext.ReserveCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Style="{StaticResource ResourceKey=StyledButton}">
                                    <StackPanel Orientation="Horizontal">
                                        <fa:ImageAwesome Icon="Book" Width="20" Height="20" Foreground="White" Margin="10" />
                                        <TextBlock Text=" Reserve "  VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</Page>
